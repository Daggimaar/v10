// recorder.js

const startRecording = () => {
  const canvas = document.querySelector("canvas");
  const stream = canvas.captureStream(25);
  const recordedChunks = [];

  const options = { mimeType: "video/webm; codecs=vp9" };
  const mediaRecorder = new MediaRecorder(stream, options);

  mediaRecorder.ondataavailable = handleDataAvailable;
  mediaRecorder.start();

  function handleDataAvailable(event) {
    console.log("data-available");
    if (event.data.size > 0) {
      recordedChunks.push(event.data);
      console.log(recordedChunks);
      download();
    } else {
      // handle no data
    }
  }

  function download() {
    const blob = new Blob(recordedChunks, { type: "video/webm" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    document.body.appendChild(a);
    a.style = "display: none";
    a.href = url;
    a.download = "recorded-video.webm";
    a.click();
    window.URL.revokeObjectURL(url);
  }

  // Expose a function to stop recording
  return () => {
    console.log("stopping");
    mediaRecorder.stop();
  };
};

export default startRecording;
